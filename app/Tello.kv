#:kivy 1.4

<KivyCamera>:
    FloatLayout:
        Button:
            id: forward
            <pos_hint: {'x': 6.5, 'y': 1.5}>
            size_hint: .5, .5
            on_press: root.on_move_forward()
            on_release: root.off_move_forward()
            background_normal: 'Resources\img\icons8-collapse-arrow-50.png'
            background_down: 'Resources\img\icons8-collapse-arrow-50-down.png'
        Button:
            pos_hint: {'x': 6.5, 'y': .5}
            size_hint: .5, .5
            on_press: root.on_move_backward()
            on_release: root.off_move_backward()
            background_normal: 'Resources\img\icons8-expand-arrow-50.png'
            background_down: 'Resources\img\icons8-expand-arrow-50-down.png'
        Button:
            pos_hint: {'x': 7, 'y': 1}
            size_hint: .5, .5
            on_press: root.on_move_right()
            on_release: root.off_move_right()
            background_normal: 'Resources\img\icons8-forward-50.png'
            background_down: 'Resources\img\icons8-forward-50-down.png'
        Button:
    	    pos_hint: {'x': 6, 'y': 1}
    	    size_hint: .5, .5
    	    on_press: root.on_move_left()
            on_release: root.off_move_left()
            background_normal: 'Resources\img\icons8-back-50.png'
            background_down: 'Resources\img\icons8-back-50-down.png'
    	Button:
    	    pos_hint: {'x': 1, 'y': 1.5}
    	    size_hint: .5, .5
    	    on_press: root.on_move_up()
            on_release: root.off_move_up()
            background_normal: 'Resources\img\icons8-double-up-50.png'
            background_down: 'Resources\img\icons8-double-up-50-down.png'
    	Button:
    	    pos_hint: {'x': 1, 'y': .5}
    	    size_hint: .5, .5
    	    on_press: root.on_move_down()
            on_release: root.off_move_down()
            background_normal: 'Resources\img\icons8-double-down-50.png'
            background_down: 'Resources\img\icons8-double-down-50-down.png'
    	Button:
    	    pos_hint: {'x': 1.5, 'y': 1}
    	    size_hint: .5, .5
    	    on_press: root.on_move_rotateR()
            on_release: root.off_move_rotateR()
            background_normal: 'Resources\img\icons8-u-turn-to-right-50.png'
            background_down: 'Resources\img\icons8-u-turn-to-right-50-down.png'
    	Button:
    	    pos_hint: {'x': 0.5, 'y': 1}
    	    size_hint: .5, .5
    	    on_press: root.on_move_rotateL()
            on_release: root.off_move_rotateL()
            background_normal: 'Resources\img\icons8-u-turn-to-left-50.png'
            background_down: 'Resources\img\icons8-u-turn-to-left-50-down.png'
    	Button:
    	    pos_hint: {'x': 3.5, 'y': 0.5}
    	    size_hint: .5, .5
    	    on_press: root.takeoff()
    	    background_normal: 'Resources\img\outline_flight_takeoff_black_48dp.png'
    	    background_down: 'Resources\img\outline_flight_takeoff_black_48dp-down.png'
    	Button:
    	    pos_hint: {'x': 4, 'y': 0.5}
    	    size_hint: .5, .5
    	    on_press: root.land()
    	    background_normal: 'Resources\img\outline_flight_land_black_48dp.png'
    	    background_down: 'Resources\img\outline_flight_land_black_48dp-down.png'
    	Label:
    	    id: battery_label
    	    text: 'Battery: 0%'
    	    color: 1, 1, 1, 1
    	    background_color: .1, .1, .1, 1
    	    text_size: 400, None
    	    pos: 165, 530
    	    canvas.before:
    	        Color:
    	            rgba: self.background_color
    	        Rectangle:
    	            size: 110, 40
    	            pos: 0, 560
    	Label:
    	    id: temperature_label
    	    text: 'Temperature: 0Â°C'
    	    color: 1, 1, 1, 1
    	    background_color: .1, .1, .1, 1
    	    text_size: 400, None
    	    pos: 275, 530
    	    canvas.before:
    	        Color:
    	            rgba: self.background_color
    	        Rectangle:
    	            size: 155, 40
    	            pos: 120, 560
    	Label:
    	    id: barometer_label
    	    text: 'Altitude: 0cm'
    	    color: 1, 1, 1, 1
    	    background_color: .1, .1, .1, 1
    	    text_size: 400, None
    	    pos: 440, 530
    	    canvas.before:
    	        Color:
    	            rgba: self.background_color
    	        Rectangle:
    	            size: 115, 40
    	            pos: 285, 560
    	Label:
    	    id: time_flight_label
    	    text: 'Flight Time: 0s'
    	    color: 1, 1, 1, 1
    	    background_color: .1, .1, .1, 1
    	    text_size: 400, None
    	    pos: 570, 530
    	    canvas.before:
    	        Color:
    	            rgba: self.background_color
    	        Rectangle:
    	            size: 135, 40
    	            pos: 410, 560
    	Label:
    	    id: not_connected
    	    text: 'Please Connect The Drone Before Running The App'
    	    color: 1, 0, 0, 1
    	    text_size: 500, None
    	    pos: 350, 350
    	BoxLayout:
    	    orientation: 'vertical'
    	    width: 120 if root.dropdown.isShowFlipButton else 0
    	    height: 120
    	    pos: 0, 300
    	    size_hint: None, 1
    	    opacity: 1 if root.dropdown.isShowFlipButton else 0
    	    display: 'inline-block'
    	    Button:
    	        text: 'Flip Right'
    	        on_press: root.flip("r")
    	    Button:
    	        text: 'Flip Left'
    	        on_press: root.flip("l")
    	    Button:
    	        text: 'Flip Forward'
    	        on_press: root.flip("f")
    	    Button:
    	        text: 'Flip Backward'
    	        on_press: root.flip("b")
    	BoxLayout:
    	    orientation: 'vertical'
    	    width: 120 if root.dropdown.isCircleMod else 0
    	    height: 200
    	    pos: 650, 300
    	    size_hint: None, 1
    	    opacity: 1 if root.dropdown.isCircleMod else 0
    	    BoxLayout:
    	        orientation: 'vertical'
    	        Button:
    	            text: 'Forward Circle'
    	            on_press: root.doCircle("avant", radius.value, inclinaison.value)
    	    BoxLayout:
    	        orientation: 'vertical'
    	        Button:
    	            text: 'Backward Circle'
    	            on_press: root.doCircle("arriere", radius.value, inclinaison.value)
    	    BoxLayout:
    	        orientation: 'vertical'
    	        Label:
    	            text: 'Radius'
    	        Slider:
    	            id: radius
    	            min: 50
    	            max: 150
    	            step: 10
    	            orientation: 'horizontal'
    	        Label:
        	        text: str(radius.value)
        	BoxLayout:
        	    orientation: 'vertical'
    	        Label:
    	            text: 'Inclinaison'
    	        Slider:
    	            id: inclinaison
    	            min: -90
    	            max: 90
    	            step: 10
    	            orientation: 'horizontal'
    	            value: 0
    	        Label:
    	            text:str(inclinaison.value)

<CustomDropDown>:
    Button:
        text: 'Flip Mod'
        size_hint_y: None
        height: 44
        on_press: root.isShowFlipButton = not root.isShowFlipButton
        background_color: (1.0, 0.0, 0.0, 1.0) if root.isShowFlipButton else (1.0, 1.0, 1.0, 1.0)
    Button:
        text: 'FaceTracking'
        size_hint_y: None
        height: 44
        on_press: root.isFaceTracking = not root.isFaceTracking
        background_color: (1.0, 0.0, 0.0, 1.0) if root.isFaceTracking else (1.0, 1.0, 1.0, 1.0)
    Button:
        text: 'QrCode Action'
        size_hint_y: None
        height: 44
        on_press: root.isQrCodeAction = not root.isQrCodeAction
        background_color: (1.0, 0.0, 0.0, 1.0) if root.isQrCodeAction else (1.0, 1.0, 1.0, 1.0)
    Button:
        text: 'QrCode Tracking'
        size_hint_y: None
        height: 44
        on_press: root.isQrCodeTracking = not root.isQrCodeTracking
        background_color: (1.0, 0.0, 0.0, 1.0) if root.isQrCodeTracking else (1.0, 1.0, 1.0, 1.0)
    Button:
        text: 'Circle Mod'
        size_hint_y: None
        height: 44
        on_press: root.isCircleMod = not root.isCircleMod
        background_color: (1.0, 0.0, 0.0, 1.0) if root.isCircleMod else (1.0, 1.0, 1.0, 1.0)
    Button:
        text: '360 Mod'
        size_hint_y: None
        height: 44
        on_press: root.isRoundMod = not root.isRoundMod
        background_color: (1.0, 0.0, 0.0, 1.0) if root.isRoundMod else (1.0, 1.0, 1.0, 1.0)
    Button:
        text: 'Rebound Mod'
        size_hint_y: None
        height: 44
        on_press: root.isReboundMod = not root.isReboundMod
        background_color: (1.0, 0.0, 0.0, 1.0) if root.isReboundMod else (1.0, 1.0, 1.0, 1.0)
    Button:
        text: 'Big Angle'
        size_hint_y: None
        height: 44
        on_press: root.isBigAngle = not root.isBigAngle
